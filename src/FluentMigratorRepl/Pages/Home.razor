@page "/"
@using FluentMigratorRepl.Services
@inject MigrationExecutor MigrationExecutor

<PageTitle>FluentMigrator REPL</PageTitle>

<div class="repl-container">
    <div class="header">
        <h1>🔧 FluentMigrator REPL</h1>
        <p>Test FluentMigrator migrations with SQLite in your browser - No server required!</p>
    </div>

    <div class="content">
        <div class="editor-panel">
            <div class="panel-header">
                <h3>C# Migration Code</h3>
                <button class="btn btn-primary" @onclick="RunMigration" disabled="@isRunning">
                    @if (isRunning)
                    {
                        <span>⏳ Running...</span>
                    }
                    else
                    {
                        <span>▶️ Run Migration</span>
                    }
                </button>
            </div>
            <div class="editor-container">
                <textarea 
                    class="code-editor" 
                    @bind="migrationCode" 
                    @bind:event="oninput"
                    spellcheck="false"
                    placeholder="Write your FluentMigrator migration code here...">
                </textarea>
            </div>
            <div class="examples">
                <h4>Quick Examples:</h4>
                <button class="btn btn-secondary" @onclick="LoadSimpleExample">Simple Table</button>
                <button class="btn btn-secondary" @onclick="LoadComplexExample">With Foreign Keys</button>
                <button class="btn btn-secondary" @onclick="LoadIndexExample">With Indexes</button>
            </div>
        </div>

        <div class="output-panel">
            <div class="panel-header">
                <h3>Output</h3>
                <button class="btn btn-secondary" @onclick="ClearOutput">Clear</button>
            </div>
            <div class="output-container">
                <pre class="output">@output</pre>
            </div>
        </div>
    </div>
</div>

@code {
    private string migrationCode = @"using FluentMigrator;

[Migration(202501010001)]
public class CreateUsersTable : Migration
{
    public override void Up()
    {
        Create.Table(""Users"")
            .WithColumn(""Id"").AsInt32().PrimaryKey().Identity()
            .WithColumn(""Username"").AsString(50).NotNullable()
            .WithColumn(""Email"").AsString(100).NotNullable()
            .WithColumn(""CreatedAt"").AsDateTime().NotNullable()
                .WithDefault(SystemMethods.CurrentDateTime);
    }

    public override void Down()
    {
        Delete.Table(""Users"");
    }
}";

    private string output = "Ready to run migrations. Click 'Run Migration' to execute your code.";
    private bool isRunning = false;

    private async Task RunMigration()
    {
        isRunning = true;
        output = "Executing migration...\n\n";
        StateHasChanged();

        try
        {
            output = await MigrationExecutor.ExecuteMigrationCodeAsync(migrationCode);
        }
        catch (Exception ex)
        {
            output = $"Error: {ex.Message}\n\n{ex.StackTrace}";
        }
        finally
        {
            isRunning = false;
            StateHasChanged();
        }
    }

    private void ClearOutput()
    {
        output = "";
    }

    private void LoadSimpleExample()
    {
        migrationCode = @"using FluentMigrator;

[Migration(202501010001)]
public class CreateProductsTable : Migration
{
    public override void Up()
    {
        Create.Table(""Products"")
            .WithColumn(""Id"").AsInt32().PrimaryKey().Identity()
            .WithColumn(""Name"").AsString(100).NotNullable()
            .WithColumn(""Price"").AsDecimal(10, 2).NotNullable()
            .WithColumn(""InStock"").AsBoolean().WithDefaultValue(true);
    }

    public override void Down()
    {
        Delete.Table(""Products"");
    }
}";
    }

    private void LoadComplexExample()
    {
        migrationCode = @"using FluentMigrator;

[Migration(202501010001)]
public class CreateBlogSchema : Migration
{
    public override void Up()
    {
        Create.Table(""Authors"")
            .WithColumn(""Id"").AsInt32().PrimaryKey().Identity()
            .WithColumn(""Name"").AsString(100).NotNullable()
            .WithColumn(""Email"").AsString(100).NotNullable().Unique();

        Create.Table(""Posts"")
            .WithColumn(""Id"").AsInt32().PrimaryKey().Identity()
            .WithColumn(""AuthorId"").AsInt32().NotNullable()
                .ForeignKey(""Authors"", ""Id"")
            .WithColumn(""Title"").AsString(200).NotNullable()
            .WithColumn(""Content"").AsString(int.MaxValue).Nullable()
            .WithColumn(""PublishedAt"").AsDateTime().Nullable();
    }

    public override void Down()
    {
        Delete.Table(""Posts"");
        Delete.Table(""Authors"");
    }
}";
    }

    private void LoadIndexExample()
    {
        migrationCode = @"using FluentMigrator;

[Migration(202501010001)]
public class CreateOrdersWithIndexes : Migration
{
    public override void Up()
    {
        Create.Table(""Orders"")
            .WithColumn(""Id"").AsInt32().PrimaryKey().Identity()
            .WithColumn(""CustomerId"").AsInt32().NotNullable()
            .WithColumn(""OrderNumber"").AsString(50).NotNullable()
            .WithColumn(""OrderDate"").AsDateTime().NotNullable()
            .WithColumn(""Status"").AsString(20).NotNullable();

        Create.Index(""IX_Orders_CustomerId"")
            .OnTable(""Orders"")
            .OnColumn(""CustomerId"");

        Create.Index(""IX_Orders_OrderDate"")
            .OnTable(""Orders"")
            .OnColumn(""OrderDate"").Descending();

        Create.Index(""IX_Orders_OrderNumber"")
            .OnTable(""Orders"")
            .OnColumn(""OrderNumber"")
            .Unique();
    }

    public override void Down()
    {
        Delete.Table(""Orders"");
    }
}";
    }
}
